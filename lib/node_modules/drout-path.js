
const Drout = require("drout");

const getPath = (queryPath, paths) => {
  for (const path in paths) {
    const expression = new RegExp(path);
    if (!expression.test(queryPath)) continue;
    return paths[path];
  }
  return null;
};

module.exports = {
  getPath,
  render: (options) => {
    // we need paths specified
    if (!options.paths) {
      console.error("drout-path component rendered with no paths object");
      return null;
    }
    // if we weren't passed a path, detect it
    let path = options.path;
    if (!path && window) {
      path = window.location.pathname;
    }
    if (!path) {
      console.error("drout-path component rendered with no path specified");
      return null;
    }
    // see if our path lines up with an available option
    let activePath = getPath(path, options.paths);
    if (!activePath) {
      console.error("drout-path component path not found");
      return null;
    }
    if (options.inherited) {
      activePath.inherited = Object.assign({}, options.inherited, activePath.inherited);
    }
    return Drout.render(activePath);
  },
};
